{
  "version": 1,
  "cli": {
    "defaultCollection": "@nrwl/angular"
  },
  "defaultProject": "ngx-lottie",
  "schematics": {
    "@nrwl/angular:application": {
      "linter": "eslint",
      "unitTestRunner": "jest"
    },
    "@nrwl/angular:library": {
      "linter": "eslint",
      "unitTestRunner": "jest"
    },
    "@nrwl/angular:component": {}
  },
  "projects": {
    "demos": {
      "projectType": "application",
      "root": "apps/demos",
      "sourceRoot": "apps/demos/src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/demos/browser",
            "index": "apps/demos/src/index.html",
            "main": "apps/demos/src/main.ts",
            "polyfills": "apps/demos/src/polyfills.ts",
            "tsConfig": "apps/demos/tsconfig.app.json",
            "styles": [],
            "scripts": [],
            "vendorChunk": true,
            "extractLicenses": false,
            "buildOptimizer": false,
            "sourceMap": true,
            "optimization": false,
            "namedChunks": true,
            "assets": [
              "apps/demos/src/favicon.ico",
              "apps/demos/src/assets",
              {
                "glob": "*.json",
                "input": "apps/demos/assets/animations",
                "output": "/assets/animations"
              }
            ],
            "allowedCommonJsDependencies": ["lottie-web"]
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/demos/src/environments/environment.ts",
                  "with": "apps/demos/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "demos:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "demos:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/demos/src/**/*.ts", "apps/demos/src/**/*.html"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/demos"],
          "options": {
            "jestConfig": "apps/demos/jest.config.js",
            "passWithNoTests": true
          }
        },
        "server": {
          "builder": "@angular-devkit/build-angular:server",
          "options": {
            "outputPath": "dist/apps/demos/server",
            "main": "apps/demos/server.ts",
            "tsConfig": "apps/demos/tsconfig.server.json",
            "sourceMap": true,
            "optimization": false
          },
          "configurations": {
            "production": {
              "sourceMap": false,
              "optimization": true,
              "outputHashing": "media",
              "fileReplacements": [
                {
                  "replace": "apps/demos/src/environments/environment.ts",
                  "with": "apps/demos/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve-ssr": {
          "builder": "@nguniversal/builders:ssr-dev-server",
          "options": {
            "browserTarget": "demos:build",
            "serverTarget": "demos:server"
          },
          "configurations": {
            "production": {
              "browserTarget": "demos:build:production",
              "serverTarget": "demos:server:production"
            }
          }
        }
      }
    },
    "ngx-lottie": {
      "projectType": "library",
      "root": "libs/ngx-lottie",
      "sourceRoot": "libs/ngx-lottie/src",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "options": {
            "tsConfig": "libs/ngx-lottie/tsconfig.lib.json",
            "project": "libs/ngx-lottie/ng-package.json"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/ngx-lottie/src/**/*.ts", "libs/ngx-lottie/src/**/*.html"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/ngx-lottie/jest.config.js",
            "passWithNoTests": true
          }
        },
        "publish-patch": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "cd libs/ngx-lottie && npm version patch",
              "nx build ngx-lottie && cp README.md ./dist/libs/ngx-lottie",
              "git add . && git push && git push --tags",
              "cd dist/libs/ngx-lottie && npm publish --access public"
            ],
            "parallel": false
          }
        },
        "publish-minor": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "cd libs/ngx-lottie && npm version minor",
              "nx build ngx-lottie && cp README.md ./dist/libs/ngx-lottie",
              "git add . && git push && git push --tags",
              "cd dist/libs/ngx-lottie && npm publish --access public"
            ],
            "parallel": false
          }
        },
        "publish-major": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "cd libs/ngx-lottie && npm version major",
              "nx build ngx-lottie && cp README.md ./dist/libs/ngx-lottie",
              "git add . && git push && git push --tags",
              "cd dist/libs/ngx-lottie && npm publish --access public"
            ],
            "parallel": false
          }
        }
      }
    }
  }
}
